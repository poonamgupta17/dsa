//lc-2149
//to rearrange the elements of an array by their sign
//Time Complexity: O(n)
//Space Complexity: O(1)
#include<bits/stdc++.h>
using namespace std;
class Solution {
public:
    vector<int> rearrangeArray(vector<int>& nums) {
        int n=nums.size();
        int pindex=0,nindex=1;
        vector<int>ans(n,0);
        for(int i=0;i<n;i++){
            if(nums[i]>0){
                ans[pindex]=nums[i];
                pindex+=2;
            }
            else{
                ans[nindex]=nums[i];
                nindex+=2;
            }
        }
        return ans;
    }
};

//if number of positive and negative numbers are not equal
//tc: O(2n)
//sc: O(n)
class Solution {
public:
    vector<int> rearrangeArray(vector<int>& nums) {
        int n=nums.size();
        vector<int>pos,neg;
        for(int i=0;i<n;i++){
            if(nums[i]>0){
                pos.push_back(nums[i]);
            }
            else{
                neg.push_back(nums[i]);
            }
        }
        if(pos.size()>neg.size()){
            for(int i=0;i<neg.size();i++){
                nums[2*i]=pos[i];
                nums[2*i+1]=neg[i];
            }
            int index=neg.size()*2;
            for(int i=neg.size();i<pos.size();i++){
                nums[index]=pos[i];
                index++;
            }
        }
        else{
            for(int i=0;i<pos.size();i++){
                nums[2*i]=pos[i];
                nums[2*i+1]=neg[i];
            }
            int index=pos.size()*2;
            for(int i=pos.size();i<neg.size();i++){
                nums[index]=neg[i];
                index++;
            }

        }
        return nums;
    }
};